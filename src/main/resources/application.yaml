spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost
      channels:
        follower_channel:
          name: follower_channel
        profile_view_channel:
            name: profile_view_channel

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      client-id: userservice
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        enable.idempotence: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: userservice
      enable-auto-commit: false
    listener:
      ack-mode: manual
    retry:
      attempts: 3

server:
  port: 8080

logging:
  level:
    root: info

project-service:
  host: localhost
  port: 8082

payment-service:
  host: localhost
  port: 9080
  currency: EUR
  dbCurrency: USD
  api: /api
  sendPayment: /payment

aws:
  accessKey: access_key
  secretKey: secret_key
  region: bucket_region

services:
  s3:
    bucket-name: user_backet
    isMocked: true

kafka-topic:
  consumer:
    payment-response: userservice.payment.response
  producer:
    payment-request: paymentservice.payment.request
